
package lab3.services;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "FilmService", targetNamespace = "http://lab3/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FilmService {


    /**
     * 
     * @param filmId
     * @return
     *     returns java.lang.String
     * @throws WrongIdException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteFilm", targetNamespace = "http://lab3/", className = "lab3.services.DeleteFilm")
    @ResponseWrapper(localName = "deleteFilmResponse", targetNamespace = "http://lab3/", className = "lab3.services.DeleteFilmResponse")
    @Action(input = "http://lab3/FilmService/deleteFilmRequest", output = "http://lab3/FilmService/deleteFilmResponse", fault = {
        @FaultAction(className = WrongIdException.class, value = "http://lab3/FilmService/deleteFilm/Fault/WrongIdException")
    })
    public String deleteFilm(
        @WebParam(name = "filmId", targetNamespace = "")
        int filmId)
        throws WrongIdException
    ;

    /**
     * 
     * @param duration
     * @param country
     * @param director
     * @param dateOfStart
     * @param filmName
     * @return
     *     returns java.lang.Integer
     * @throws WrongFieldValueException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertFilm", targetNamespace = "http://lab3/", className = "lab3.services.InsertFilm")
    @ResponseWrapper(localName = "insertFilmResponse", targetNamespace = "http://lab3/", className = "lab3.services.InsertFilmResponse")
    @Action(input = "http://lab3/FilmService/insertFilmRequest", output = "http://lab3/FilmService/insertFilmResponse", fault = {
        @FaultAction(className = WrongFieldValueException.class, value = "http://lab3/FilmService/insertFilm/Fault/WrongFieldValueException")
    })
    public Integer insertFilm(
        @WebParam(name = "filmName", targetNamespace = "")
        String filmName,
        @WebParam(name = "director", targetNamespace = "")
        String director,
        @WebParam(name = "country", targetNamespace = "")
        String country,
        @WebParam(name = "dateOfStart", targetNamespace = "")
        XMLGregorianCalendar dateOfStart,
        @WebParam(name = "duration", targetNamespace = "")
        Double duration)
        throws WrongFieldValueException
    ;

    /**
     * 
     * @param duration
     * @param country
     * @param director
     * @param filmId
     * @param dateOfStart
     * @param filmName
     * @return
     *     returns java.lang.String
     * @throws WrongIdException
     * @throws WrongFieldValueException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateFilm", targetNamespace = "http://lab3/", className = "lab3.services.UpdateFilm")
    @ResponseWrapper(localName = "updateFilmResponse", targetNamespace = "http://lab3/", className = "lab3.services.UpdateFilmResponse")
    @Action(input = "http://lab3/FilmService/updateFilmRequest", output = "http://lab3/FilmService/updateFilmResponse", fault = {
        @FaultAction(className = WrongIdException.class, value = "http://lab3/FilmService/updateFilm/Fault/WrongIdException"),
        @FaultAction(className = WrongFieldValueException.class, value = "http://lab3/FilmService/updateFilm/Fault/WrongFieldValueException")
    })
    public String updateFilm(
        @WebParam(name = "filmId", targetNamespace = "")
        int filmId,
        @WebParam(name = "filmName", targetNamespace = "")
        String filmName,
        @WebParam(name = "director", targetNamespace = "")
        String director,
        @WebParam(name = "country", targetNamespace = "")
        String country,
        @WebParam(name = "dateOfStart", targetNamespace = "")
        XMLGregorianCalendar dateOfStart,
        @WebParam(name = "duration", targetNamespace = "")
        Double duration)
        throws WrongFieldValueException, WrongIdException
    ;

    /**
     * 
     * @param duration
     * @param country
     * @param director
     * @param dateOfStart
     * @param filmName
     * @return
     *     returns java.util.List<lab3.services.Film>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findFilms", targetNamespace = "http://lab3/", className = "lab3.services.FindFilms")
    @ResponseWrapper(localName = "findFilmsResponse", targetNamespace = "http://lab3/", className = "lab3.services.FindFilmsResponse")
    @Action(input = "http://lab3/FilmService/findFilmsRequest", output = "http://lab3/FilmService/findFilmsResponse")
    public List<Film> findFilms(
        @WebParam(name = "filmName", targetNamespace = "")
        String filmName,
        @WebParam(name = "director", targetNamespace = "")
        String director,
        @WebParam(name = "country", targetNamespace = "")
        String country,
        @WebParam(name = "dateOfStart", targetNamespace = "")
        XMLGregorianCalendar dateOfStart,
        @WebParam(name = "duration", targetNamespace = "")
        Double duration);

}
